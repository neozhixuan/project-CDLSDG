[{"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\pages\\about.js":"1","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\pages\\day\\index.js":"2","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\pages\\index.js":"3","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\pages\\_app.js":"4","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Sidebar.jsx":"5","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Container.jsx":"6","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page1\\StockBanner.jsx":"7","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page1\\StockCard.jsx":"8","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page1\\StockLayout.jsx":"9","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\Accordion.jsx":"10","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\Card.jsx":"11","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\CardStats.jsx":"12","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\ESGScore.jsx":"13","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\NameBlock.jsx":"14","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\Numbering.jsx":"15","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\Score.jsx":"16","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\SectorCard.jsx":"17","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\StockAnalysisCard.jsx":"18","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\StockEvaluator.jsx":"19","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Select.jsx":"20","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\StockLabel.jsx":"21","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\StockScore.jsx":"22"},{"size":69,"mtime":1654455399206,"results":"23","hashOfConfig":"24"},{"size":68,"mtime":1654455399207,"results":"25","hashOfConfig":"24"},{"size":8558,"mtime":1657530661376,"results":"26","hashOfConfig":"24"},{"size":156,"mtime":1654455661688,"results":"27","hashOfConfig":"24"},{"size":7472,"mtime":1657275191000,"results":"28","hashOfConfig":"24"},{"size":168,"mtime":1655694026821,"results":"29","hashOfConfig":"24"},{"size":746,"mtime":1657531415042,"results":"30","hashOfConfig":"24"},{"size":1124,"mtime":1657531363996,"results":"31","hashOfConfig":"24"},{"size":1154,"mtime":1657526042507,"results":"32","hashOfConfig":"24"},{"size":1253,"mtime":1657525169942,"results":"33","hashOfConfig":"24"},{"size":1130,"mtime":1657531000870,"results":"34","hashOfConfig":"24"},{"size":360,"mtime":1657525186857,"results":"35","hashOfConfig":"24"},{"size":400,"mtime":1657526180951,"results":"36","hashOfConfig":"24"},{"size":546,"mtime":1657525815492,"results":"37","hashOfConfig":"24"},{"size":532,"mtime":1657531633143,"results":"38","hashOfConfig":"24"},{"size":691,"mtime":1657530904165,"results":"39","hashOfConfig":"24"},{"size":898,"mtime":1657529504005,"results":"40","hashOfConfig":"24"},{"size":2689,"mtime":1657531738907,"results":"41","hashOfConfig":"24"},{"size":5204,"mtime":1657531064802,"results":"42","hashOfConfig":"24"},{"size":811,"mtime":1657264875181,"results":"43","hashOfConfig":"24"},{"size":228,"mtime":1654535067091,"results":"44","hashOfConfig":"24"},{"size":1145,"mtime":1657266732079,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b2yxst",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\pages\\about.js",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\pages\\day\\index.js",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\pages\\index.js",["114"],[],"import Link from \"next/link\";\nimport Head from \"next/head\";\nimport { Sidebar } from \"../components/Sidebar\";\nimport { StockLayout } from \"../components/Page1/StockLayout\";\nimport { StockEvaluator } from \"../components/Page2/StockEvaluator\";\nimport { StockScore } from \"../components/StockScore\";\nimport { useState } from \"react\";\nimport { Container } from \"../components/Container\";\nimport { Select } from \"../components/Select\";\nimport ESGscores from \"../jsonfiles/ESGscores.json\";\nimport { Numbering } from \"../components/Page2/Numbering\";\nimport { useMediaQuery } from \"react-responsive\";\n\nexport default function IndexPage({ datapoint }) {\n  const [page, willSetPage] = useState(0);\n  const [name, setName] = useState(\"\");\n\n  const [items, setItems] = useState([1]);\n  const [stocks, setStocks] = useState([]);\n  const [allItems, setAllItems] = useState([]);\n  const [sectors, setSectors] = useState({});\n\n  const [score, setScore] = useState(0);\n  const [e, setE] = useState(0);\n  const [s, setS] = useState(0);\n  const [g, setG] = useState(0);\n\n  const isDesktopMode = useMediaQuery({\n    query: \"(min-width: 1024px)\",\n  });\n\n  const isTabletMode = useMediaQuery({\n    query: \"(min-width: 768px)\",\n  });\n\n  var gatherStats = () => {\n    // Hold average ESG score\n    let count = 0;\n    let total = 0;\n    let totalE = 0;\n    let totalS = 0;\n    let totalG = 0;\n    let average = 0;\n    // Prevents stocks from piling up when code changes in local\n    if (allItems.length !== stocks.length) {\n      // \"allItems\" will be the state that holds all the stocks and info\n      for (let i = 0; i < stocks.length; i++) {\n        for (let j = 0; j < datapoint.stocks.length; j++) {\n          if (stocks[i] === datapoint.stocks[j].Code) {\n            allItems.push(datapoint.stocks[j]);\n\n            // Hash Table to compute the companies\n            if (sectors[datapoint.stocks[j].Sector] !== undefined) {\n              sectors[datapoint.stocks[j].Sector] += 1;\n            } else {\n              sectors[datapoint.stocks[j].Sector] = 1;\n            }\n\n            total += datapoint.stocks[j].ESG;\n            totalE += datapoint.stocks[j].E;\n            totalS += datapoint.stocks[j].S;\n            totalG += datapoint.stocks[j].G;\n            console.log(\"total is \" + total);\n            count++;\n            if (count === stocks.length) {\n              average = total / count;\n              setScore(average);\n              console.log(\"Average score is \" + score);\n              setE(totalE / count);\n              setS(totalS / count);\n              setG(totalG / count);\n            }\n          }\n        }\n      }\n      setAllItems(allItems);\n      console.log(allItems);\n\n      for (const sector in sectors) {\n        sectors[sector] = (sectors[sector] / allItems.length) * 100;\n      }\n\n      const sortedSectors = Object.fromEntries(\n        Object.entries(sectors).sort(([, a], [, b]) => b - a)\n      );\n      setSectors(sortedSectors);\n    } else {\n      console.log(\"Close\");\n    }\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    for (let i = 2; i < event.target.elements.length - 1; i += 2) {\n      const value = event.target[i].value;\n      if (value !== \"Choose a stock\") {\n        stocks.push(value);\n      }\n    }\n    if (stocks.length != 0 && stocks[0].length < 13) {\n      setName(event.target.elements[0].value);\n      setStocks([...stocks]);\n      willSetPage(1);\n    } else {\n      setStocks([]);\n    }\n    gatherStats();\n  };\n\n  const jasonStart = () => {\n    stocks.push(\"MSFT\", \"AAPL\", \"TSLA\", \"AMZN\");\n    setStocks([...stocks]);\n    console.log(stocks.length);\n    console.log(allItems.length);\n    willSetPage(1);\n    gatherStats();\n  };\n\n  const addSelect = () => {\n    if (items.length < 6) {\n      items.push(items[items.length - 1] + 1);\n      setItems([...items]);\n    }\n  };\n\n  const willRemoveItem = () => {\n    if (items.length > 1) {\n      items.pop();\n      setItems([...items]);\n    }\n  };\n\n  const resetPage = () => {\n    setItems([1]);\n    setStocks([]);\n    willSetPage(0);\n    setAllItems([]);\n    setScore(0);\n    setSectors([]);\n  };\n\n  return (\n    <main>\n      <Head>\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Caveat:wght@700&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n      <div className={`flex w-full bg-gray-100 ${isTabletMode ? \"\" : \"p-4\"}`}>\n        {isTabletMode && <Sidebar page={page} />}\n        \n        {page === 0 && (\n          <Container>\n            <form onSubmit={onSubmitHandler} className=\"flex flex-col\">\n              <p className=\"mb-2 flex flex-col content-center\">\n                {\" \"}\n                <label htmlFor=\"name\">(1) Name</label>\n                <input id=\"name\" className=\"border border-gray-300\" />\n              </p>\n              <div className=\"mb-2 flex flex-col content-center\">\n                <div className=\"flex flex-row\">\n                  <label htmlFor=\"countries\">(2) Stock</label>{\" \"}\n                  <input\n                    type=\"button\"\n                    className=\"w-10 border border-gray-300\"\n                    value=\"-\"\n                    onClick={willRemoveItem}\n                  />\n                </div>\n\n                {items.map((data, idx) => (\n                  <Select\n                    data={datapoint}\n                    key={idx}\n                    number={data}\n                    willAddItem={() => addSelect()}\n                  />\n                ))}\n              </div>\n              <button\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded flex justify-center\"\n                type=\"submit\"\n              >\n                Submit\n              </button>\n            </form>\n            <p className=\"mt-10 font-semibold\">\n              Alternatively, use a demo portfolio:\n            </p>\n            <select\n              id=\"countries\"\n              className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg w-full form-multiselect\"\n            >\n              <option defaultValue>TESLA INC</option>\n            </select>\n            <select\n              id=\"countries\"\n              className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg w-full form-multiselect\"\n            >\n              <option defaultValue>MICROSOFT INC</option>\n            </select>\n            <select\n              id=\"countries\"\n              className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg w-full form-multiselect\"\n            >\n              <option defaultValue>APPLE INC</option>\n            </select>\n            <select\n              id=\"countries\"\n              className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg w-full form-multiselect\"\n            >\n              <option defaultValue>AMAZON.COM INC</option>\n            </select>\n            <button\n              onClick={jasonStart}\n              className=\"mt-2 w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded flex justify-center\"\n            >\n              Log in as Jason\n            </button>\n          </Container>\n        )}\n        {page === 1 && (\n          <div className=\"grid grid-cols-4 md:grid-cols-12 w-full grid-rows-2 md:grid-rows-1\">\n            <StockLayout\n              className=\"h-full col-span-4 md:col-span-8 row-span-1\"\n              setPage={resetPage}\n              name={name}\n              allItems={allItems}\n              score={score}\n            />\n            <StockScore\n              setPage={() => willSetPage(2)}\n              className=\"col-span-4 md:col-span-4 h-full p-10 row-span-1\"\n              score={score}\n            />\n          </div>\n        )}\n        {page === 2 && (\n          <>\n            {isDesktopMode && <Numbering />}\n\n            <StockEvaluator\n              setPage={() => willSetPage(1)}\n              score={score}\n              allItems={allItems}\n              env={e}\n              soc={s}\n              gov={g}\n              sectors={sectors}\n            />\n          </>\n        )}\n      </div>\n    </main>\n  );\n}\nfunction compareStrings(a, b) {\n  // Assuming you want case-insensitive comparison\n  a = a.toLowerCase();\n  b = b.toLowerCase();\n\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\nexport async function getStaticProps() {\n  const stocks = await ESGscores;\n  stocks.sort(function (a, b) {\n    return compareStrings(a.Stock_Name, b.Stock_Name);\n  });\n  return {\n    props: {\n      datapoint: {\n        stocks: stocks,\n      },\n    },\n  };\n}\n","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\pages\\_app.js",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Sidebar.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Container.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page1\\StockBanner.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page1\\StockCard.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page1\\StockLayout.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\Accordion.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\Card.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\CardStats.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\ESGScore.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\NameBlock.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\Numbering.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\Score.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\SectorCard.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\StockAnalysisCard.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Page2\\StockEvaluator.jsx",["115","116"],[],"import { Card } from \"./Card\";\r\nimport { SectorCard } from \"./SectorCard\";\r\nimport { StockAnalysisCard } from \"./StockAnalysisCard\";\r\nimport { Accordion } from \"./Accordion\";\r\nimport { useState } from \"react\";\r\n\r\nexport const StockEvaluator = (props) => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const nextStock = () => {\r\n    if (index !== props.allItems.length - 1) {\r\n      setIndex(index + 1);\r\n    }\r\n  };\r\n\r\n  const prevStock = () => {\r\n    if (index !== 0) {\r\n      setIndex(index - 1);\r\n    }\r\n  };\r\n\r\n  const classes = \"p-5 w-full flex-col bg-gray-100 \" + props.className;\r\n  return (\r\n    <div className={classes}>\r\n      {/* Part 1 */}\r\n      <div className=\"font-semibold mt-20\">Your Current Statistics</div>\r\n      <Card\r\n        className=\"mx-auto text-center \"\r\n        a={\"A breakdown of your average sustainability scores\"}\r\n        b={props.score > 60 ? \"GOOD\" : props.score < 30 ? \"POOR\" : \"NORMAL\"}\r\n        c={props.score}\r\n        d={props.env}\r\n        e={props.soc}\r\n        f={props.gov}\r\n      />\r\n      <ul className=\"flex flex-col bg-gray-100 mt-4\">\r\n        {props.allItems.map((data, idx) => (\r\n          <div key={idx}>\r\n            {idx === index && (\r\n              <StockAnalysisCard\r\n                companyName={data.Code}\r\n                stockName={data.Exch}\r\n                stockChange={data.Change}\r\n                last={data.Last}\r\n                name={data.Stock_Name}\r\n                stockChangePercent={data.ChangePerc}\r\n                esg={data.ESG}\r\n                e={data.E}\r\n                s={data.S}\r\n                g={data.G}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n        {/* Navigator for the items */}\r\n        {props.allItems.length > 1 && (\r\n          <div className=\"flex flex-row justify-between bg-white px-4 py-1 mt-1\">\r\n            <button onClick={prevStock} className=\"font-semibold\">\r\n              Prev\r\n            </button>\r\n            <span>\r\n              {index + 1}/{props.allItems.length}\r\n            </span>\r\n            <button onClick={nextStock} className=\"font-semibold\">\r\n              Next\r\n            </button>\r\n          </div>\r\n        )}\r\n      </ul>\r\n\r\n      {/* Part 2 */}\r\n      <div className=\"font-semibold mt-10\">\r\n        Understanding the benefits of ESG\r\n      </div>\r\n      <div className=\"bg-gray-100 mt-3\">\r\n        <div className=\"justify-between bg-white rounded-md flex flex-1 items-center p-4\">\r\n          <div className=\"basis-4/5\">\r\n            Investing in a stock with high ESG ratings have their individual\r\n            benefits. Studies have proven that companies with higher ESG ratings\r\n            have a positive relation with the financial performance. At the same\r\n            time, these companies have a lower risk regarding their stock price\r\n            and action. We will breakdown the individual factors here for your\r\n            education.\r\n          </div>\r\n          <div className=\"basis-1/5\">\r\n            <img src=\"/flower.png\" />\r\n          </div>\r\n        </div>\r\n        <Accordion\r\n          header={\"Environment\"}\r\n          content={\r\n            \"On a whole, Climate change causes extensive disruption to economic activity and financial stability. Although financial services companies generate little direct carbon emissions and have limited effects to implicate the climate, it results in active and passive climate actions. Actively, as a shareholder of the company, institutions and individuals have a say in each decision made by the company, which can directly lead to climate actions. Passively, as the masses are increasing investments in organisations focused on climate actions, it, in turn, encourages them to continue such climate actions.\"\r\n          }\r\n        />\r\n        <Accordion header={\"Social\"} content={\"boop\"} />\r\n        <Accordion header={\"Governmental\"} content={\"boop\"} />\r\n      </div>\r\n\r\n      {/* Part 3 */}\r\n      <div className=\"font-semibold mt-10\">Investing to Improve Your Score</div>\r\n      <SectorCard\r\n        sectors={props.sectors}\r\n        className=\"mx-auto mt-3 \"\r\n        a={\"A Breakdown of Your Portfolio’s Holdings\"}\r\n      />\r\n      <ul className=\"flex flex-col bg-gray-100 mt-4\">\r\n        <StockAnalysisCard\r\n          suggestion={true}\r\n          companyName={\"MSFT\"}\r\n          stockName={\"NASDAQ\"}\r\n          stockChange={\"View report\"}\r\n          esg={93}\r\n          last={111.3}\r\n          e={78}\r\n          s={97}\r\n          g={93}\r\n        />\r\n      </ul>\r\n      {/* Part 4 */}\r\n      {/* <div className=\"font-semibold mt-5\">Leaderboard</div>\r\n      <div\r\n        className={`p-5 flex-row w-full select-none cursor-pointer bg-white rounded-md flex flex-1 items-center p-4  transition duration-200 ease-in-out transform hover:-translate-y-1 hover:shadow bg-gray-100 w-full ${props.className}`}\r\n      >\r\n        <div className=\"basis-1/2 flex flex-col\">\r\n          <div>Sebastian</div>\r\n          <div>Jason</div>\r\n        </div>\r\n        <div className=\"basis-1/2\">Eiden wins</div>\r\n      </div> */}\r\n      <button\r\n        className=\"w-20 h-10 bg-blue-500 text-white mt-5\"\r\n        onClick={props.setPage}\r\n      >\r\n        Back\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\Select.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\StockLabel.jsx",[],[],"C:\\Users\\Zhixuan\\Documents\\GitHub\\project-CDLSDG\\components\\StockScore.jsx",[],[],{"ruleId":"117","severity":1,"message":"118","line":145,"column":9,"nodeType":"119","endLine":148,"endColumn":11},{"ruleId":"120","severity":1,"message":"121","line":86,"column":13,"nodeType":"119","endLine":86,"endColumn":38},{"ruleId":"122","severity":1,"message":"123","line":86,"column":13,"nodeType":"119","endLine":86,"endColumn":38},"@next/next/no-page-custom-font","Custom fonts not added at the document level will only load for a single page. This is discouraged. See: https://nextjs.org/docs/messages/no-page-custom-font","JSXOpeningElement","@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]